connections {
    windows-ipsec {
        local_addrs = 10.0.0.6                                         #IP address of this (local) Linux host
        #remote_addrs = 10.0.0.2                                       #IP address of the remote peer
        version = 1                                                    #IKEv1 required for Windows GPO-enforced IPsec policies (non-VPN)

        local {
            auth = pubkey                                              #Use certificate/public key authentication
            certs = rocky02.tenaka.loc.crt                             #Path to local certificate for this host
            id = "CN=rocky02.tenaka.loc"                               #Optional: explicitly specify identity string (used for matching)
        }

        remote {
            auth = pubkey
            id = %any                                                  #Accept any identity (must still verify cert with CA)
        }

        #Quick Mode – Phase 2 configuration for the IPsec tunnel
        children {
            #Default phase 2 
            windows-ipsec {
                local_ts = 10.0.0.6/32                                 #Traffic selector: source IP or subnet from this host
                #remote_ts = 10.0.0.2/32                               #Traffic selector: destination IP or subnet on remote host
                remote_ts = 10.0.0.0/24, 10.0.1.0/24, 10.0.2.0/24      #Accept traffic from multiple subnets 
                mode = transport                                       #Use transport mode (no new IP header; encrypt only payload)
                esp_proposals = aes128gcm128                           #Encryption and integrity algorithm for ESP (AES-GCM-128)
                start_action = trap                                    #Start this child SA when matching traffic is seen
                dpd_action = restart                                   #Restart the connection if DPD (Dead Peer Detection) fails
                rekey_time = 60m                                       #Rekey after 60 minutes
                rekey_bytes = 100000K                                  #Rekey after 100,000 KB transferred
                    
                    #Allows unencrypted web traffic (e.g., for updates)
                    passthrough-clear {
                       local_ts = dynamic[tcp/443,tcp/80]              #Match dynamic source IP, specific TCP ports
                       remote_ts = 10.0.0.254                          #Destination IP to bypass IPsec
                       mode = pass                                     #Pass through this traffic unencrypted
                       start_action = trap                             #Monitor and trigger when matching traffic appears
                    }
            }
        }

        #Main Mode – Phase 1 IKE configuration
        proposals = aes256-sha256-ecp256                               #IKE proposal: AES-256 encryption, SHA-256 integrity, ECDH group 19 (ECP256)
        reauth_time = 480m                                             #Reauthenticate every 480 minutes (8 hours)
        dpd_delay = 30s                                                #Interval before sending DPD probe
        dpd_timeout = 150s                                             #Timeout for DPD (after which peer is considered dead)
    }
}

secrets {
    private-1 {
        file = /etc/strongswan/swanctl/private/ipsec.key               #Private key associated with the local cert
    }
}

authorities {
    ca-authority {
        cacert = /etc/strongswan/swanctl/x509ca/tenaka-ca.crt          #CA certificate used to validate peer certs
    }
}
